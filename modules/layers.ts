import { defineNuxtModule, addTypeTemplate } from '@nuxt/kit'
import { defu } from 'defu'

export default defineNuxtModule({
    setup(_options, nuxt) {
      addTypeTemplate({
        filename: 'types/my-module.d.ts',
        getContents: () => `// Generated by my-module
          declare module 'nuxt/schema' {
            interface Service {
              name: string,
              endpoint: string,
              icon?: string
            }
            interface NuxtConfig {
              service: {
                name: string,
                endpoint: string,
                icon?: string
              }
            }
            interface PublicRuntimeConfig {
              services: Service[],
              currentService: Service || undefined
            }
          }
          export {}`
      })

      const services = nuxt.options._layers.map(layer => layer.config.service).filter(service => {
        return service?.endpoint !== "/"
      })

      const currentService = (nuxt.options as any).service as typeof services[0]

      nuxt.options.runtimeConfig.public = defu(nuxt.options.runtimeConfig.public, { services })

      if (currentService && currentService?.endpoint !== "/") {
        nuxt.options.runtimeConfig.public = defu(nuxt.options.runtimeConfig.public, { currentService: currentService })
      }
    }
})
